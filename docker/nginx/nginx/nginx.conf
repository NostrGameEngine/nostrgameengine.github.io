
load_module /usr/lib/nginx/modules/ngx_http_js_module.so;
load_module /usr/lib/nginx/modules/ngx_stream_js_module.so;


user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;
    include "/etc/nginx/cloudflare.conf";

    js_import extendNip11 from "/etc/nginx/scripts/nip11-ext.js";
    map $request_method$http_accept $nostr_json {
        default 0;
        "~^GETapplication/nostr\+json" 1;
    }

   server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;

        location /health {
            return 200 "UP\n";
        }

        # Redirect all http
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name "";
        include "/etc/nginx/server.conf";

        location / {
            return 404;
        }
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
    
        server_name "ngengine.org";

        include "/etc/nginx/server.conf";

        set $p_name "website.docker";
        set $p_port "8080";
        include "/etc/nginx/reverse_proxy_cors.conf";
    }


    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
    
        server_name ~^(?<domain>[^.]+)\.ngengine\.org$;

        include "/etc/nginx/server.conf";

        set $p_name "$domain.docker";
        set $p_port "8080";
        include "/etc/nginx/reverse_proxy_cors.conf";
    }


    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;

        server_name "relay.ngengine.org";

        include "/etc/nginx/server.conf";

        resolver 127.0.0.11 ipv6=off;
        uninitialized_variable_warn off;

        set $p_name "nostr.docker";
        set $p_port "8080";
        set $p_scheme "http";
      

        location / {
            proxy_http_version 1.1;
            include "/etc/nginx/cors.conf";

            # Use js_content for NIP-11 JSON responses
            if ($nostr_json = "1") {
                js_content extendNip11.extendNip11;
            }

            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            proxy_redirect off;

            proxy_request_buffering off;
            proxy_buffering off;
            proxy_buffers 16 16k;
            proxy_buffer_size 16k;
            chunked_transfer_encoding on;

            proxy_intercept_errors on;

            access_log off;
            log_not_found off;

            proxy_read_timeout 5m;
            proxy_connect_timeout 60s;
            proxy_send_timeout 5m;
            proxy_socket_keepalive on;


            proxy_pass $p_scheme://$p_name:$p_port;
        }
    }
}
